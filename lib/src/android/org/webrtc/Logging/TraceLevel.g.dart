// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum org_webrtc_Logging_TraceLevel {
  TRACE_NONE /* null */,
  TRACE_STATEINFO /* null */,
  TRACE_WARNING /* null */,
  TRACE_ERROR /* null */,
  TRACE_CRITICAL /* null */,
  TRACE_APICALL /* null */,
  TRACE_DEFAULT /* null */,
  TRACE_MODULECALL /* null */,
  TRACE_MEMORY /* null */,
  TRACE_TIMER /* null */,
  TRACE_STREAM /* null */,
  TRACE_DEBUG /* null */,
  TRACE_INFO /* null */,
  TRACE_TERSEINFO /* null */,
  TRACE_ALL /* null */
}

extension org_webrtc_Logging_TraceLevelToX on org_webrtc_Logging_TraceLevel {
  int toValue() {
    switch (this) {
      case org_webrtc_Logging_TraceLevel.TRACE_NONE: return org_webrtc_Logging_TraceLevel.TRACE_NONE.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_STATEINFO: return org_webrtc_Logging_TraceLevel.TRACE_STATEINFO.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_WARNING: return org_webrtc_Logging_TraceLevel.TRACE_WARNING.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_ERROR: return org_webrtc_Logging_TraceLevel.TRACE_ERROR.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_CRITICAL: return org_webrtc_Logging_TraceLevel.TRACE_CRITICAL.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_APICALL: return org_webrtc_Logging_TraceLevel.TRACE_APICALL.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_DEFAULT: return org_webrtc_Logging_TraceLevel.TRACE_DEFAULT.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_MODULECALL: return org_webrtc_Logging_TraceLevel.TRACE_MODULECALL.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_MEMORY: return org_webrtc_Logging_TraceLevel.TRACE_MEMORY.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_TIMER: return org_webrtc_Logging_TraceLevel.TRACE_TIMER.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_STREAM: return org_webrtc_Logging_TraceLevel.TRACE_STREAM.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_DEBUG: return org_webrtc_Logging_TraceLevel.TRACE_DEBUG.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_INFO: return org_webrtc_Logging_TraceLevel.TRACE_INFO.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_TERSEINFO: return org_webrtc_Logging_TraceLevel.TRACE_TERSEINFO.index + 0;
      case org_webrtc_Logging_TraceLevel.TRACE_ALL: return org_webrtc_Logging_TraceLevel.TRACE_ALL.index + 0;
    }
  }
}

extension org_webrtc_Logging_TraceLevelFromX on int {
  org_webrtc_Logging_TraceLevel toorg_webrtc_Logging_TraceLevel() {
    switch (this) {
      
      default: return org_webrtc_Logging_TraceLevel.values[this + 0];
    }
  }
}