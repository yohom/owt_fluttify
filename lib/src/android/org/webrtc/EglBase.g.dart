// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:owt_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';



mixin org_webrtc_EglBase on java_lang_Object {
  

  

  

  

  @mustCallSuper
  Future<void> createDummyPbufferSurface() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('createDummyPbufferSurface::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> createPbufferSurface(int var1, int var2) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('createPbufferSurface::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<org_webrtc_EglBase_Context> getEglBaseContext() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('getEglBaseContext::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<bool> hasSurface() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('hasSurface::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<int> surfaceWidth() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('surfaceWidth::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<int> surfaceHeight() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('surfaceHeight::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> releaseSurface() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('releaseSurface::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> release() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('release::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> makeCurrent() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('makeCurrent::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> detachCurrent() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('detachCurrent::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> swapBuffers() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('swapBuffers::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> swapBuffers__int(int var1) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('swapBuffers__int::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
}

