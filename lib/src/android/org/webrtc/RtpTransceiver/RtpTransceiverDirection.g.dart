// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum org_webrtc_RtpTransceiver_RtpTransceiverDirection {
  SEND_RECV /* null */,
  SEND_ONLY /* null */,
  RECV_ONLY /* null */,
  INACTIVE /* null */
}

extension org_webrtc_RtpTransceiver_RtpTransceiverDirectionToX on org_webrtc_RtpTransceiver_RtpTransceiverDirection {
  int toValue() {
    switch (this) {
      case org_webrtc_RtpTransceiver_RtpTransceiverDirection.SEND_RECV: return org_webrtc_RtpTransceiver_RtpTransceiverDirection.SEND_RECV.index + 0;
      case org_webrtc_RtpTransceiver_RtpTransceiverDirection.SEND_ONLY: return org_webrtc_RtpTransceiver_RtpTransceiverDirection.SEND_ONLY.index + 0;
      case org_webrtc_RtpTransceiver_RtpTransceiverDirection.RECV_ONLY: return org_webrtc_RtpTransceiver_RtpTransceiverDirection.RECV_ONLY.index + 0;
      case org_webrtc_RtpTransceiver_RtpTransceiverDirection.INACTIVE: return org_webrtc_RtpTransceiver_RtpTransceiverDirection.INACTIVE.index + 0;
    }
  }
}

extension org_webrtc_RtpTransceiver_RtpTransceiverDirectionFromX on int {
  org_webrtc_RtpTransceiver_RtpTransceiverDirection toorg_webrtc_RtpTransceiver_RtpTransceiverDirection() {
    switch (this) {
      
      default: return org_webrtc_RtpTransceiver_RtpTransceiverDirection.values[this + 0];
    }
  }
}