// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:owt_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class org_webrtc_AudioSource extends org_webrtc_MediaSource  {
  //region constants
  static const String name__ = 'org.webrtc.AudioSource';

  
  //endregion

  //region creators
  static Future<org_webrtc_AudioSource> create__long(int nativeSource) async {
    final int refId = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('ObjectFactory::createorg_webrtc_AudioSource__long', {"nativeSource": nativeSource});
    final object = org_webrtc_AudioSource()..refId = refId..tag__ = 'owt_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<List<org_webrtc_AudioSource>> create_batch__long(List<int> nativeSource) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('ObjectFactory::create_batchorg_webrtc_AudioSource__long', [for (int __i__ = 0; __i__ < nativeSource.length; __i__++) {"nativeSource": nativeSource[__i__]}]);
  
    final List<org_webrtc_AudioSource> typedResult = resultBatch.map((result) => org_webrtc_AudioSource()..refId = result..tag__ = 'owt_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  //endregion
}

extension org_webrtc_AudioSource_Batch on List<org_webrtc_AudioSource> {
  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  //endregion
}