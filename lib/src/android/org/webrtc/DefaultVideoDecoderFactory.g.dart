// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:owt_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class org_webrtc_DefaultVideoDecoderFactory extends java_lang_Object with org_webrtc_VideoDecoderFactory {
  //region constants
  static const String name__ = 'org.webrtc.DefaultVideoDecoderFactory';

  
  //endregion

  //region creators
  static Future<org_webrtc_DefaultVideoDecoderFactory> create__org_webrtc_EglBase_Context(org_webrtc_EglBase_Context eglContext) async {
    final int refId = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('ObjectFactory::createorg_webrtc_DefaultVideoDecoderFactory__org_webrtc_EglBase_Context', {"eglContext": eglContext.refId});
    final object = org_webrtc_DefaultVideoDecoderFactory()..refId = refId..tag__ = 'owt_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<List<org_webrtc_DefaultVideoDecoderFactory>> create_batch__org_webrtc_EglBase_Context(List<org_webrtc_EglBase_Context> eglContext) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('ObjectFactory::create_batchorg_webrtc_DefaultVideoDecoderFactory__org_webrtc_EglBase_Context', [for (int __i__ = 0; __i__ < eglContext.length; __i__++) {"eglContext": eglContext[__i__].refId}]);
  
    final List<org_webrtc_DefaultVideoDecoderFactory> typedResult = resultBatch.map((result) => org_webrtc_DefaultVideoDecoderFactory()..refId = result..tag__ = 'owt_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  //endregion
}

extension org_webrtc_DefaultVideoDecoderFactory_Batch on List<org_webrtc_DefaultVideoDecoderFactory> {
  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  //endregion
}