// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:owt_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';



mixin org_webrtc_CameraVideoCapturer_CameraEventsHandler on java_lang_Object {
  

  

  

  

  @mustCallSuper
  Future<void> onCameraError(String var1) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('onCameraError::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onCameraDisconnected() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('onCameraDisconnected::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onCameraFreezed(String var1) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('onCameraFreezed::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onCameraOpening(String var1) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('onCameraOpening::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onFirstFrameAvailable() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('onFirstFrameAvailable::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onCameraClosed() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('onCameraClosed::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
}

