// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum org_webrtc_MediaCodecVideoEncoder_BitrateAdjustmentType {
  NO_ADJUSTMENT /* null */,
  FRAMERATE_ADJUSTMENT /* null */,
  DYNAMIC_ADJUSTMENT /* null */
}

extension org_webrtc_MediaCodecVideoEncoder_BitrateAdjustmentTypeToX on org_webrtc_MediaCodecVideoEncoder_BitrateAdjustmentType {
  int toValue() {
    switch (this) {
      case org_webrtc_MediaCodecVideoEncoder_BitrateAdjustmentType.NO_ADJUSTMENT: return org_webrtc_MediaCodecVideoEncoder_BitrateAdjustmentType.NO_ADJUSTMENT.index + 0;
      case org_webrtc_MediaCodecVideoEncoder_BitrateAdjustmentType.FRAMERATE_ADJUSTMENT: return org_webrtc_MediaCodecVideoEncoder_BitrateAdjustmentType.FRAMERATE_ADJUSTMENT.index + 0;
      case org_webrtc_MediaCodecVideoEncoder_BitrateAdjustmentType.DYNAMIC_ADJUSTMENT: return org_webrtc_MediaCodecVideoEncoder_BitrateAdjustmentType.DYNAMIC_ADJUSTMENT.index + 0;
    }
  }
}

extension org_webrtc_MediaCodecVideoEncoder_BitrateAdjustmentTypeFromX on int {
  org_webrtc_MediaCodecVideoEncoder_BitrateAdjustmentType toorg_webrtc_MediaCodecVideoEncoder_BitrateAdjustmentType() {
    switch (this) {
      
      default: return org_webrtc_MediaCodecVideoEncoder_BitrateAdjustmentType.values[this + 0];
    }
  }
}