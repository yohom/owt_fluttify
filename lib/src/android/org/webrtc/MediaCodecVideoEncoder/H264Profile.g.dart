// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum org_webrtc_MediaCodecVideoEncoder_H264Profile {
  CONSTRAINED_BASELINE /* null */,
  BASELINE /* null */,
  MAIN /* null */,
  CONSTRAINED_HIGH /* null */,
  HIGH /* null */
}

extension org_webrtc_MediaCodecVideoEncoder_H264ProfileToX on org_webrtc_MediaCodecVideoEncoder_H264Profile {
  int toValue() {
    switch (this) {
      case org_webrtc_MediaCodecVideoEncoder_H264Profile.CONSTRAINED_BASELINE: return org_webrtc_MediaCodecVideoEncoder_H264Profile.CONSTRAINED_BASELINE.index + 0;
      case org_webrtc_MediaCodecVideoEncoder_H264Profile.BASELINE: return org_webrtc_MediaCodecVideoEncoder_H264Profile.BASELINE.index + 0;
      case org_webrtc_MediaCodecVideoEncoder_H264Profile.MAIN: return org_webrtc_MediaCodecVideoEncoder_H264Profile.MAIN.index + 0;
      case org_webrtc_MediaCodecVideoEncoder_H264Profile.CONSTRAINED_HIGH: return org_webrtc_MediaCodecVideoEncoder_H264Profile.CONSTRAINED_HIGH.index + 0;
      case org_webrtc_MediaCodecVideoEncoder_H264Profile.HIGH: return org_webrtc_MediaCodecVideoEncoder_H264Profile.HIGH.index + 0;
    }
  }
}

extension org_webrtc_MediaCodecVideoEncoder_H264ProfileFromX on int {
  org_webrtc_MediaCodecVideoEncoder_H264Profile toorg_webrtc_MediaCodecVideoEncoder_H264Profile() {
    switch (this) {
      
      default: return org_webrtc_MediaCodecVideoEncoder_H264Profile.values[this + 0];
    }
  }
}