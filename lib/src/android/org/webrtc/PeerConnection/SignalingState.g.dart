// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum org_webrtc_PeerConnection_SignalingState {
  STABLE /* null */,
  HAVE_LOCAL_OFFER /* null */,
  HAVE_LOCAL_PRANSWER /* null */,
  HAVE_REMOTE_OFFER /* null */,
  HAVE_REMOTE_PRANSWER /* null */,
  CLOSED /* null */
}

extension org_webrtc_PeerConnection_SignalingStateToX on org_webrtc_PeerConnection_SignalingState {
  int toValue() {
    switch (this) {
      case org_webrtc_PeerConnection_SignalingState.STABLE: return org_webrtc_PeerConnection_SignalingState.STABLE.index + 0;
      case org_webrtc_PeerConnection_SignalingState.HAVE_LOCAL_OFFER: return org_webrtc_PeerConnection_SignalingState.HAVE_LOCAL_OFFER.index + 0;
      case org_webrtc_PeerConnection_SignalingState.HAVE_LOCAL_PRANSWER: return org_webrtc_PeerConnection_SignalingState.HAVE_LOCAL_PRANSWER.index + 0;
      case org_webrtc_PeerConnection_SignalingState.HAVE_REMOTE_OFFER: return org_webrtc_PeerConnection_SignalingState.HAVE_REMOTE_OFFER.index + 0;
      case org_webrtc_PeerConnection_SignalingState.HAVE_REMOTE_PRANSWER: return org_webrtc_PeerConnection_SignalingState.HAVE_REMOTE_PRANSWER.index + 0;
      case org_webrtc_PeerConnection_SignalingState.CLOSED: return org_webrtc_PeerConnection_SignalingState.CLOSED.index + 0;
    }
  }
}

extension org_webrtc_PeerConnection_SignalingStateFromX on int {
  org_webrtc_PeerConnection_SignalingState toorg_webrtc_PeerConnection_SignalingState() {
    switch (this) {
      
      default: return org_webrtc_PeerConnection_SignalingState.values[this + 0];
    }
  }
}