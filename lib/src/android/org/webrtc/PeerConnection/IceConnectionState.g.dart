// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum org_webrtc_PeerConnection_IceConnectionState {
  NEW /* null */,
  CHECKING /* null */,
  CONNECTED /* null */,
  COMPLETED /* null */,
  FAILED /* null */,
  DISCONNECTED /* null */,
  CLOSED /* null */
}

extension org_webrtc_PeerConnection_IceConnectionStateToX on org_webrtc_PeerConnection_IceConnectionState {
  int toValue() {
    switch (this) {
      case org_webrtc_PeerConnection_IceConnectionState.NEW: return org_webrtc_PeerConnection_IceConnectionState.NEW.index + 0;
      case org_webrtc_PeerConnection_IceConnectionState.CHECKING: return org_webrtc_PeerConnection_IceConnectionState.CHECKING.index + 0;
      case org_webrtc_PeerConnection_IceConnectionState.CONNECTED: return org_webrtc_PeerConnection_IceConnectionState.CONNECTED.index + 0;
      case org_webrtc_PeerConnection_IceConnectionState.COMPLETED: return org_webrtc_PeerConnection_IceConnectionState.COMPLETED.index + 0;
      case org_webrtc_PeerConnection_IceConnectionState.FAILED: return org_webrtc_PeerConnection_IceConnectionState.FAILED.index + 0;
      case org_webrtc_PeerConnection_IceConnectionState.DISCONNECTED: return org_webrtc_PeerConnection_IceConnectionState.DISCONNECTED.index + 0;
      case org_webrtc_PeerConnection_IceConnectionState.CLOSED: return org_webrtc_PeerConnection_IceConnectionState.CLOSED.index + 0;
    }
  }
}

extension org_webrtc_PeerConnection_IceConnectionStateFromX on int {
  org_webrtc_PeerConnection_IceConnectionState toorg_webrtc_PeerConnection_IceConnectionState() {
    switch (this) {
      
      default: return org_webrtc_PeerConnection_IceConnectionState.values[this + 0];
    }
  }
}