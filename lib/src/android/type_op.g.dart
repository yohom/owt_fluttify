// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:io';

import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';
import 'package:owt_fluttify/src/android/android.export.g.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
extension TypeOpOwtFluttifyAndroid on Object {
  // type check
  Future<bool> is__<T>() async {
    final typeName = T.toString();
    if (RegExp('(List<)?(String|int|double)(>)?|(Map<String,(String|int|double)>)').hasMatch(typeName)) {
      return this is T;
    }
    else if (T == org_webrtc_GlRectDrawer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_GlRectDrawer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_GlUtil) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_GlUtil', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_HardwareVideoEncoderFactory) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_HardwareVideoEncoderFactory', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_MediaSource) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_MediaSource', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_Size) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_Size', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoDecoderFallback) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoDecoderFallback', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_MediaCodecVideoEncoder) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_MediaCodecVideoEncoder', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_CallSessionFileRotatingLogSink) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_CallSessionFileRotatingLogSink', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoFrame_TextureBuffer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoFrame_TextureBuffer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_RendererCommon_RendererEvents) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_RendererCommon_RendererEvents', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_DefaultVideoEncoderFactory) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_DefaultVideoEncoderFactory', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoCapabilityParser) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoCapabilityParser', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_FileVideoCapturer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_FileVideoCapturer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_RendererCommon_GlDrawer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_RendererCommon_GlDrawer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_StatsReport) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_StatsReport', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_Camera1Capturer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_Camera1Capturer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoEncoder_CodecSpecificInfo) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoEncoder_CodecSpecificInfo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_Camera1Enumerator) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_Camera1Enumerator', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_MediaCodecVideoEncoder_EncoderProperties) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_MediaCodecVideoEncoder_EncoderProperties', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_SurfaceViewRenderer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_SurfaceViewRenderer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_CameraVideoCapturer_CameraStatistics) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_CameraVideoCapturer_CameraStatistics', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_EglBase_Context) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_EglBase_Context', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_RtpSender) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_RtpSender', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoFrame) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoFrame', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_DefaultVideoDecoderFactory) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_DefaultVideoDecoderFactory', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_CameraEnumerationAndroid) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_CameraEnumerationAndroid', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_GlShader) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_GlShader', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_DataChannel) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_DataChannel', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoEncoder_Settings) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoEncoder_Settings', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_TextureBufferImpl) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_TextureBufferImpl', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_HardwareVideoDecoderFactory) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_HardwareVideoDecoderFactory', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_NetworkMonitor) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_NetworkMonitor', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_CameraEnumerationAndroid_CaptureFormat) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_CameraEnumerationAndroid_CaptureFormat', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoDecoder_Settings) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoDecoder_Settings', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_GlTextureFrameBuffer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_GlTextureFrameBuffer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_MediaStream) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_MediaStream', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_JniCommon) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_JniCommon', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_NV21Buffer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_NV21Buffer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_SessionDescription) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_SessionDescription', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoEncoderFallback) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoEncoderFallback', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoFrame_Buffer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoFrame_Buffer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoDecoderFactory) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoDecoderFactory', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoEncoder_ScalingSettings) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoEncoder_ScalingSettings', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_NetworkMonitorAutoDetect_NetworkInformation) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_NetworkMonitorAutoDetect_NetworkInformation', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_RefCounted) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_RefCounted', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoTrack) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoTrack', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_SurfaceTextureHelper) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_SurfaceTextureHelper', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_PeerConnection) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_PeerConnection', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_AudioSource) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_AudioSource', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_PeerConnectionFactory_Options) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_PeerConnectionFactory_Options', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoEncoder) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoEncoder', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_PeerConnectionFactory) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_PeerConnectionFactory', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoEncoderFactory) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoEncoderFactory', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_RtpParameters) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_RtpParameters', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoCodecInfo) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoCodecInfo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_voiceengine_BuildInfo) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_voiceengine_BuildInfo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_voiceengine_WebRtcAudioTrack) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_voiceengine_WebRtcAudioTrack', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_voiceengine_WebRtcAudioEffects) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_voiceengine_WebRtcAudioEffects', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_voiceengine_WebRtcAudioRecord) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_voiceengine_WebRtcAudioRecord', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_voiceengine_WebRtcAudioUtils) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_voiceengine_WebRtcAudioUtils', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_voiceengine_WebRtcAudioManager) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_voiceengine_WebRtcAudioManager', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_Camera2Enumerator) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_Camera2Enumerator', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_PeerConnection_IntervalRange) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_PeerConnection_IntervalRange', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_Metrics_HistogramInfo) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_Metrics_HistogramInfo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_YuvConverter) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_YuvConverter', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_RendererCommon) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_RendererCommon', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_DataChannel_Init) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_DataChannel_Init', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoFrame_I420Buffer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoFrame_I420Buffer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_PeerConnection_IceServer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_PeerConnection_IceServer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_SdpObserver) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_SdpObserver', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoDecoder_DecodeInfo) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoDecoder_DecodeInfo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_MediaCodecVideoDecoder) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_MediaCodecVideoDecoder', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_PeerConnectionDependencies) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_PeerConnectionDependencies', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_MediaStreamTrack) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_MediaStreamTrack', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_audio_AudioDeviceModule) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_audio_AudioDeviceModule', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_audio_LegacyAudioDeviceModule) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_audio_LegacyAudioDeviceModule', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_audio_JavaAudioDeviceModule_AudioSamples) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_audio_JavaAudioDeviceModule_AudioSamples', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_audio_JavaAudioDeviceModule) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_audio_JavaAudioDeviceModule', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_RTCStats) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_RTCStats', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoSource) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoSource', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_EncodedImage) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_EncodedImage', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoCapturer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoCapturer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_RtpReceiver) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_RtpReceiver', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_JavaI420Buffer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_JavaI420Buffer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoFileRenderer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoFileRenderer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_SurfaceEglRenderer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_SurfaceEglRenderer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_YuvHelper) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_YuvHelper', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_ContextUtils) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_ContextUtils', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_EglRenderer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_EglRenderer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoFrameDrawer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoFrameDrawer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_CameraEnumerationAndroid_CaptureFormat_FramerateRange) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_CameraEnumerationAndroid_CaptureFormat_FramerateRange', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoSink) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoSink', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_CameraEnumerator) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_CameraEnumerator', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_SoftwareVideoEncoderFactory) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_SoftwareVideoEncoderFactory', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_RtpTransceiver) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_RtpTransceiver', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_RendererCommon_VideoLayoutMeasure) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_RendererCommon_VideoLayoutMeasure', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_NetworkMonitorAutoDetect) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_NetworkMonitorAutoDetect', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_ScreenCapturerAndroid) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_ScreenCapturerAndroid', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_MediaConstraints_KeyValuePair) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_MediaConstraints_KeyValuePair', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_Camera2Capturer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_Camera2Capturer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoEncoder_CodecSpecificInfoH264) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoEncoder_CodecSpecificInfoH264', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoEncoder_CodecSpecificInfoVP9) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoEncoder_CodecSpecificInfoVP9', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_CameraVideoCapturer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_CameraVideoCapturer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_NV12Buffer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_NV12Buffer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoEncoder_BitrateAllocation) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoEncoder_BitrateAllocation', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_PeerConnection_Observer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_PeerConnection_Observer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_NetworkMonitorAutoDetect_IPAddress) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_NetworkMonitorAutoDetect_IPAddress', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_ThreadUtils) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_ThreadUtils', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoEncoder_CodecSpecificInfoVP8) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoEncoder_CodecSpecificInfoVP8', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_IceCandidate) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_IceCandidate', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoEncoder_EncodeInfo) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoEncoder_EncodeInfo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_ThreadUtils_ThreadChecker) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_ThreadUtils_ThreadChecker', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_PeerConnection_RTCConfiguration) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_PeerConnection_RTCConfiguration', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_DtmfSender) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_DtmfSender', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_Logging) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_Logging', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_DataChannel_Buffer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_DataChannel_Buffer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_AudioTrack) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_AudioTrack', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_DataChannel_Observer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_DataChannel_Observer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_SoftwareVideoDecoderFactory) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_SoftwareVideoDecoderFactory', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_MediaConstraints) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_MediaConstraints', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_RtpTransceiver_RtpTransceiverInit) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_RtpTransceiver_RtpTransceiverInit', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_StatsReport_Value) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_StatsReport_Value', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_Metrics) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_Metrics', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_VideoDecoder) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_VideoDecoder', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == org_webrtc_TurnCustomizer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOforg_webrtc_TurnCustomizer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_Participant) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_Participant', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_Publication) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_Publication', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_ConferenceInfo) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_ConferenceInfo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_SubscribeOptions) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_SubscribeOptions', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_Subscription_VideoUpdateOptions) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_Subscription_VideoUpdateOptions', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_PublishOptions) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_PublishOptions', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_RemoteMixedStream_RemoteMixedStreamObserver) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_RemoteMixedStream_RemoteMixedStreamObserver', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_PublicationSettings) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_PublicationSettings', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_RemoteStream) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_RemoteStream', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_ConferenceClientConfiguration) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_ConferenceClientConfiguration', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_SubscriptionCapabilities) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_SubscriptionCapabilities', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_Subscription) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_Subscription', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_BuildConfig) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_BuildConfig', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_conference_RemoteMixedStream) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_conference_RemoteMixedStream', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_p2p_Publication) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_p2p_Publication', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_p2p_P2PClientConfiguration) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_p2p_P2PClientConfiguration', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_p2p_RemoteStream) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_p2p_RemoteStream', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_p2p_SignalingChannelInterface_SignalingChannelObserver) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_p2p_SignalingChannelInterface_SignalingChannelObserver', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_p2p_P2PClient) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_p2p_P2PClient', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_p2p_BuildConfig) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_p2p_BuildConfig', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_MediaConstraints_AudioTrackConstraints) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_MediaConstraints_AudioTrackConstraints', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_Publication) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_Publication', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_ClientConfiguration) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_ClientConfiguration', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_RemoteStream_StreamObserver) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_RemoteStream_StreamObserver', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_AudioCodecParameters) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_AudioCodecParameters', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_MediaCodecs) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_MediaCodecs', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_PeerConnectionChannel) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_PeerConnectionChannel', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_Stream) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_Stream', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_VideoCapturer) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_VideoCapturer', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_AudioEncodingParameters) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_AudioEncodingParameters', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_Stream_StreamSourceInfo) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_Stream_StreamSourceInfo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_PeerConnectionChannel_PeerConnectionChannelObserver) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_PeerConnectionChannel_PeerConnectionChannelObserver', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_CheckCondition) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_CheckCondition', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_VideoCodecParameters) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_VideoCodecParameters', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_LocalStream) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_LocalStream', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_RemoteStream) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_RemoteStream', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_VideoEncodingParameters) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_VideoEncodingParameters', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_Const) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_Const', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_BuildConfig) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_BuildConfig', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_OwtError) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_OwtError', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_MediaConstraints) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_MediaConstraints', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == owt_base_ContextInitialization) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfowt_base_ContextInitialization', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_content_Context) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_content_Context', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_content_Intent) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_content_Intent', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_content_ContentProvider) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_content_ContentProvider', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_app_Application) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_app_Application', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_app_Notification) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_app_Notification', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_app_Activity) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_app_Activity', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_app_PendingIntent) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_app_PendingIntent', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_os_Bundle) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_os_Bundle', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_os_Binder) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_os_Binder', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_view_View) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_view_View', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_view_SurfaceView) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_view_SurfaceView', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_view_ViewGroup) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_view_ViewGroup', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_graphics_Point) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_graphics_Point', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_graphics_PointF) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_graphics_PointF', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_graphics_Bitmap) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_graphics_Bitmap', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_widget_ImageView) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_widget_ImageView', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == java_io_File) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfjava_io_File', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_location_Location) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_location_Location', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_view_MotionEvent) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_view_MotionEvent', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_graphics_drawable_Drawable) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_graphics_drawable_Drawable', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_widget_FrameLayout) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_widget_FrameLayout', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_widget_TextView) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_widget_TextView', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_widget_LinearLayout) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_widget_LinearLayout', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_widget_RelativeLayout) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_widget_RelativeLayout', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_util_Pair) {
      final result = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('RefClass::isKindOfandroid_util_Pair', {'refId': (this as Ref).refId});
      return result;
    }
  }

  // type cast
  T as__<T>() {
    final typeName = T.toString();
    // jsonable 直接造型 返回
    if (RegExp('(List<)?(String|int|double)(>)?|(Map<String,(String|int|double)>)').hasMatch(typeName)) {
      return this as T;
    }
    // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
    else if (T == org_webrtc_GlRectDrawer) {
      return (org_webrtc_GlRectDrawer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_GlUtil) {
      return (org_webrtc_GlUtil()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_HardwareVideoEncoderFactory) {
      return (org_webrtc_HardwareVideoEncoderFactory()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_MediaSource) {
      return (org_webrtc_MediaSource()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_Size) {
      return (org_webrtc_Size()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoDecoderFallback) {
      return (org_webrtc_VideoDecoderFallback()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_MediaCodecVideoEncoder) {
      return (org_webrtc_MediaCodecVideoEncoder()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_CallSessionFileRotatingLogSink) {
      return (org_webrtc_CallSessionFileRotatingLogSink()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoFrame_TextureBuffer) {
      return (org_webrtc_VideoFrame_TextureBuffer.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_RendererCommon_RendererEvents) {
      return (org_webrtc_RendererCommon_RendererEvents.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_DefaultVideoEncoderFactory) {
      return (org_webrtc_DefaultVideoEncoderFactory()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoCapabilityParser) {
      return (org_webrtc_VideoCapabilityParser()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_FileVideoCapturer) {
      return (org_webrtc_FileVideoCapturer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_RendererCommon_GlDrawer) {
      return (org_webrtc_RendererCommon_GlDrawer.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_StatsReport) {
      return (org_webrtc_StatsReport()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_Camera1Capturer) {
      return (org_webrtc_Camera1Capturer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoEncoder_CodecSpecificInfo) {
      return (org_webrtc_VideoEncoder_CodecSpecificInfo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_Camera1Enumerator) {
      return (org_webrtc_Camera1Enumerator()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_MediaCodecVideoEncoder_EncoderProperties) {
      return (org_webrtc_MediaCodecVideoEncoder_EncoderProperties()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_SurfaceViewRenderer) {
      return (org_webrtc_SurfaceViewRenderer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_CameraVideoCapturer_CameraStatistics) {
      return (org_webrtc_CameraVideoCapturer_CameraStatistics()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_EglBase_Context) {
      return (org_webrtc_EglBase_Context.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_RtpSender) {
      return (org_webrtc_RtpSender()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoFrame) {
      return (org_webrtc_VideoFrame()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_DefaultVideoDecoderFactory) {
      return (org_webrtc_DefaultVideoDecoderFactory()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_CameraEnumerationAndroid) {
      return (org_webrtc_CameraEnumerationAndroid()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_GlShader) {
      return (org_webrtc_GlShader()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_DataChannel) {
      return (org_webrtc_DataChannel()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoEncoder_Settings) {
      return (org_webrtc_VideoEncoder_Settings()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_TextureBufferImpl) {
      return (org_webrtc_TextureBufferImpl()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_HardwareVideoDecoderFactory) {
      return (org_webrtc_HardwareVideoDecoderFactory()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_NetworkMonitor) {
      return (org_webrtc_NetworkMonitor()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_CameraEnumerationAndroid_CaptureFormat) {
      return (org_webrtc_CameraEnumerationAndroid_CaptureFormat()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoDecoder_Settings) {
      return (org_webrtc_VideoDecoder_Settings()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_GlTextureFrameBuffer) {
      return (org_webrtc_GlTextureFrameBuffer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_MediaStream) {
      return (org_webrtc_MediaStream()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_JniCommon) {
      return (org_webrtc_JniCommon()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_NV21Buffer) {
      return (org_webrtc_NV21Buffer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_SessionDescription) {
      return (org_webrtc_SessionDescription()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoEncoderFallback) {
      return (org_webrtc_VideoEncoderFallback()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoFrame_Buffer) {
      return (org_webrtc_VideoFrame_Buffer.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoDecoderFactory) {
      return (org_webrtc_VideoDecoderFactory.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoEncoder_ScalingSettings) {
      return (org_webrtc_VideoEncoder_ScalingSettings()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_NetworkMonitorAutoDetect_NetworkInformation) {
      return (org_webrtc_NetworkMonitorAutoDetect_NetworkInformation()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_RefCounted) {
      return (org_webrtc_RefCounted.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoTrack) {
      return (org_webrtc_VideoTrack()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_SurfaceTextureHelper) {
      return (org_webrtc_SurfaceTextureHelper()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_PeerConnection) {
      return (org_webrtc_PeerConnection()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_AudioSource) {
      return (org_webrtc_AudioSource()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_PeerConnectionFactory_Options) {
      return (org_webrtc_PeerConnectionFactory_Options()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoEncoder) {
      return (org_webrtc_VideoEncoder.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_PeerConnectionFactory) {
      return (org_webrtc_PeerConnectionFactory()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoEncoderFactory) {
      return (org_webrtc_VideoEncoderFactory.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_RtpParameters) {
      return (org_webrtc_RtpParameters()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoCodecInfo) {
      return (org_webrtc_VideoCodecInfo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_voiceengine_BuildInfo) {
      return (org_webrtc_voiceengine_BuildInfo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_voiceengine_WebRtcAudioTrack) {
      return (org_webrtc_voiceengine_WebRtcAudioTrack()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_voiceengine_WebRtcAudioEffects) {
      return (org_webrtc_voiceengine_WebRtcAudioEffects()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_voiceengine_WebRtcAudioRecord) {
      return (org_webrtc_voiceengine_WebRtcAudioRecord()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_voiceengine_WebRtcAudioUtils) {
      return (org_webrtc_voiceengine_WebRtcAudioUtils()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_voiceengine_WebRtcAudioManager) {
      return (org_webrtc_voiceengine_WebRtcAudioManager()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_Camera2Enumerator) {
      return (org_webrtc_Camera2Enumerator()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_PeerConnection_IntervalRange) {
      return (org_webrtc_PeerConnection_IntervalRange()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_Metrics_HistogramInfo) {
      return (org_webrtc_Metrics_HistogramInfo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_YuvConverter) {
      return (org_webrtc_YuvConverter()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_RendererCommon) {
      return (org_webrtc_RendererCommon()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_DataChannel_Init) {
      return (org_webrtc_DataChannel_Init()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoFrame_I420Buffer) {
      return (org_webrtc_VideoFrame_I420Buffer.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_PeerConnection_IceServer) {
      return (org_webrtc_PeerConnection_IceServer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_SdpObserver) {
      return (org_webrtc_SdpObserver.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoDecoder_DecodeInfo) {
      return (org_webrtc_VideoDecoder_DecodeInfo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_MediaCodecVideoDecoder) {
      return (org_webrtc_MediaCodecVideoDecoder()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_PeerConnectionDependencies) {
      return (org_webrtc_PeerConnectionDependencies()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_MediaStreamTrack) {
      return (org_webrtc_MediaStreamTrack()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_audio_AudioDeviceModule) {
      return (org_webrtc_audio_AudioDeviceModule.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_audio_LegacyAudioDeviceModule) {
      return (org_webrtc_audio_LegacyAudioDeviceModule()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_audio_JavaAudioDeviceModule_AudioSamples) {
      return (org_webrtc_audio_JavaAudioDeviceModule_AudioSamples()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_audio_JavaAudioDeviceModule) {
      return (org_webrtc_audio_JavaAudioDeviceModule()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_RTCStats) {
      return (org_webrtc_RTCStats()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoSource) {
      return (org_webrtc_VideoSource()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_EncodedImage) {
      return (org_webrtc_EncodedImage()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoCapturer) {
      return (org_webrtc_VideoCapturer.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_RtpReceiver) {
      return (org_webrtc_RtpReceiver()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_JavaI420Buffer) {
      return (org_webrtc_JavaI420Buffer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoFileRenderer) {
      return (org_webrtc_VideoFileRenderer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_SurfaceEglRenderer) {
      return (org_webrtc_SurfaceEglRenderer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_YuvHelper) {
      return (org_webrtc_YuvHelper()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_ContextUtils) {
      return (org_webrtc_ContextUtils()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_EglRenderer) {
      return (org_webrtc_EglRenderer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoFrameDrawer) {
      return (org_webrtc_VideoFrameDrawer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_CameraEnumerationAndroid_CaptureFormat_FramerateRange) {
      return (org_webrtc_CameraEnumerationAndroid_CaptureFormat_FramerateRange()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoSink) {
      return (org_webrtc_VideoSink.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_CameraEnumerator) {
      return (org_webrtc_CameraEnumerator.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_SoftwareVideoEncoderFactory) {
      return (org_webrtc_SoftwareVideoEncoderFactory()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_RtpTransceiver) {
      return (org_webrtc_RtpTransceiver()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_RendererCommon_VideoLayoutMeasure) {
      return (org_webrtc_RendererCommon_VideoLayoutMeasure()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_NetworkMonitorAutoDetect) {
      return (org_webrtc_NetworkMonitorAutoDetect()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_ScreenCapturerAndroid) {
      return (org_webrtc_ScreenCapturerAndroid()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_MediaConstraints_KeyValuePair) {
      return (org_webrtc_MediaConstraints_KeyValuePair()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_Camera2Capturer) {
      return (org_webrtc_Camera2Capturer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoEncoder_CodecSpecificInfoH264) {
      return (org_webrtc_VideoEncoder_CodecSpecificInfoH264()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoEncoder_CodecSpecificInfoVP9) {
      return (org_webrtc_VideoEncoder_CodecSpecificInfoVP9()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_CameraVideoCapturer) {
      return (org_webrtc_CameraVideoCapturer.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_NV12Buffer) {
      return (org_webrtc_NV12Buffer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoEncoder_BitrateAllocation) {
      return (org_webrtc_VideoEncoder_BitrateAllocation()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_PeerConnection_Observer) {
      return (org_webrtc_PeerConnection_Observer.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_NetworkMonitorAutoDetect_IPAddress) {
      return (org_webrtc_NetworkMonitorAutoDetect_IPAddress()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_ThreadUtils) {
      return (org_webrtc_ThreadUtils()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoEncoder_CodecSpecificInfoVP8) {
      return (org_webrtc_VideoEncoder_CodecSpecificInfoVP8()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_IceCandidate) {
      return (org_webrtc_IceCandidate()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoEncoder_EncodeInfo) {
      return (org_webrtc_VideoEncoder_EncodeInfo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_ThreadUtils_ThreadChecker) {
      return (org_webrtc_ThreadUtils_ThreadChecker()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_PeerConnection_RTCConfiguration) {
      return (org_webrtc_PeerConnection_RTCConfiguration()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_DtmfSender) {
      return (org_webrtc_DtmfSender()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_Logging) {
      return (org_webrtc_Logging()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_DataChannel_Buffer) {
      return (org_webrtc_DataChannel_Buffer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_AudioTrack) {
      return (org_webrtc_AudioTrack()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_DataChannel_Observer) {
      return (org_webrtc_DataChannel_Observer.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_SoftwareVideoDecoderFactory) {
      return (org_webrtc_SoftwareVideoDecoderFactory()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_MediaConstraints) {
      return (org_webrtc_MediaConstraints()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_RtpTransceiver_RtpTransceiverInit) {
      return (org_webrtc_RtpTransceiver_RtpTransceiverInit()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_StatsReport_Value) {
      return (org_webrtc_StatsReport_Value()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_Metrics) {
      return (org_webrtc_Metrics()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_VideoDecoder) {
      return (org_webrtc_VideoDecoder.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == org_webrtc_TurnCustomizer) {
      return (org_webrtc_TurnCustomizer()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_Participant) {
      return (owt_conference_Participant()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_Publication) {
      return (owt_conference_Publication()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_ConferenceInfo) {
      return (owt_conference_ConferenceInfo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_SubscribeOptions) {
      return (owt_conference_SubscribeOptions()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_Subscription_VideoUpdateOptions) {
      return (owt_conference_Subscription_VideoUpdateOptions()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_PublishOptions) {
      return (owt_conference_PublishOptions()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_RemoteMixedStream_RemoteMixedStreamObserver) {
      return (owt_conference_RemoteMixedStream_RemoteMixedStreamObserver.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_PublicationSettings) {
      return (owt_conference_PublicationSettings()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_RemoteStream) {
      return (owt_conference_RemoteStream()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_ConferenceClientConfiguration) {
      return (owt_conference_ConferenceClientConfiguration()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_SubscriptionCapabilities) {
      return (owt_conference_SubscriptionCapabilities()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_Subscription) {
      return (owt_conference_Subscription()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_BuildConfig) {
      return (owt_conference_BuildConfig()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_conference_RemoteMixedStream) {
      return (owt_conference_RemoteMixedStream()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_p2p_Publication) {
      return (owt_p2p_Publication()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_p2p_P2PClientConfiguration) {
      return (owt_p2p_P2PClientConfiguration()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_p2p_RemoteStream) {
      return (owt_p2p_RemoteStream()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_p2p_SignalingChannelInterface_SignalingChannelObserver) {
      return (owt_p2p_SignalingChannelInterface_SignalingChannelObserver.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_p2p_P2PClient) {
      return (owt_p2p_P2PClient()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_p2p_BuildConfig) {
      return (owt_p2p_BuildConfig()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_MediaConstraints_AudioTrackConstraints) {
      return (owt_base_MediaConstraints_AudioTrackConstraints()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_Publication) {
      return (owt_base_Publication()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_ClientConfiguration) {
      return (owt_base_ClientConfiguration()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_RemoteStream_StreamObserver) {
      return (owt_base_RemoteStream_StreamObserver.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_AudioCodecParameters) {
      return (owt_base_AudioCodecParameters()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_MediaCodecs) {
      return (owt_base_MediaCodecs()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_PeerConnectionChannel) {
      return (owt_base_PeerConnectionChannel()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_Stream) {
      return (owt_base_Stream()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_VideoCapturer) {
      return (owt_base_VideoCapturer.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_AudioEncodingParameters) {
      return (owt_base_AudioEncodingParameters()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_Stream_StreamSourceInfo) {
      return (owt_base_Stream_StreamSourceInfo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_PeerConnectionChannel_PeerConnectionChannelObserver) {
      return (owt_base_PeerConnectionChannel_PeerConnectionChannelObserver.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_CheckCondition) {
      return (owt_base_CheckCondition()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_VideoCodecParameters) {
      return (owt_base_VideoCodecParameters()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_LocalStream) {
      return (owt_base_LocalStream()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_RemoteStream) {
      return (owt_base_RemoteStream()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_VideoEncodingParameters) {
      return (owt_base_VideoEncodingParameters()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_Const) {
      return (owt_base_Const()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_BuildConfig) {
      return (owt_base_BuildConfig()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_OwtError) {
      return (owt_base_OwtError()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_MediaConstraints) {
      return (owt_base_MediaConstraints()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == owt_base_ContextInitialization) {
      return (owt_base_ContextInitialization()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_content_Context) {
      return (android_content_Context()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_content_Intent) {
      return (android_content_Intent()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_content_ContentProvider) {
      return (android_content_ContentProvider()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_app_Application) {
      return (android_app_Application()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_app_Notification) {
      return (android_app_Notification()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_app_Activity) {
      return (android_app_Activity()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_app_PendingIntent) {
      return (android_app_PendingIntent()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_os_Bundle) {
      return (android_os_Bundle()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_os_Binder) {
      return (android_os_Binder()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_view_View) {
      return (android_view_View()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_view_SurfaceView) {
      return (android_view_SurfaceView()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_view_ViewGroup) {
      return (android_view_ViewGroup()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_graphics_Point) {
      return (android_graphics_Point()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_graphics_PointF) {
      return (android_graphics_PointF()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_graphics_Bitmap) {
      return (android_graphics_Bitmap()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_widget_ImageView) {
      return (android_widget_ImageView()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == java_io_File) {
      return (java_io_File()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_location_Location) {
      return (android_location_Location()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_view_MotionEvent) {
      return (android_view_MotionEvent()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_graphics_drawable_Drawable) {
      return (android_graphics_drawable_Drawable()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_widget_FrameLayout) {
      return (android_widget_FrameLayout()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_widget_TextView) {
      return (android_widget_TextView()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_widget_LinearLayout) {
      return (android_widget_LinearLayout()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_widget_RelativeLayout) {
      return (android_widget_RelativeLayout()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
    else if (T == android_util_Pair) {
      return (android_util_Pair()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'owt_fluttify') as T;
    }
  }
}