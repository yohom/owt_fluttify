// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:owt_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

/* abstract */ class owt_base_ClientConfiguration extends java_lang_Object  {
  //region constants
  static const String name__ = 'owt.base.ClientConfiguration';

  
  //endregion

  //region creators
  
  //endregion

  //region getters
  Future<org_webrtc_PeerConnection_RTCConfiguration> get_rtcConfiguration() async {
    final __result__ = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod("owt.base.ClientConfiguration::get_rtcConfiguration", {'refId': refId});
    kNativeObjectPool.add(org_webrtc_PeerConnection_RTCConfiguration()..refId = __result__..tag__ = 'owt_fluttify');
    return org_webrtc_PeerConnection_RTCConfiguration()..refId = __result__..tag__ = 'owt_fluttify';
  }
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  //endregion
}

extension owt_base_ClientConfiguration_Batch on List<owt_base_ClientConfiguration> {
  //region getters
  Future<List<org_webrtc_PeerConnection_RTCConfiguration>> get_rtcConfiguration_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod("owt.base.ClientConfiguration::get_rtcConfiguration_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => org_webrtc_PeerConnection_RTCConfiguration()..refId = __result__..tag__ = 'owt_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  //endregion
}