// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum owt_base_Stream_StreamSourceInfo_VideoSourceInfo {
  CAMERA /* null */,
  SCREEN_CAST /* null */,
  RAW_FILE /* null */,
  ENCODED_FILE /* null */,
  MIXED /* null */,
  OTHERS /* null */
}

extension owt_base_Stream_StreamSourceInfo_VideoSourceInfoToX on owt_base_Stream_StreamSourceInfo_VideoSourceInfo {
  int toValue() {
    switch (this) {
      case owt_base_Stream_StreamSourceInfo_VideoSourceInfo.CAMERA: return owt_base_Stream_StreamSourceInfo_VideoSourceInfo.CAMERA.index + 0;
      case owt_base_Stream_StreamSourceInfo_VideoSourceInfo.SCREEN_CAST: return owt_base_Stream_StreamSourceInfo_VideoSourceInfo.SCREEN_CAST.index + 0;
      case owt_base_Stream_StreamSourceInfo_VideoSourceInfo.RAW_FILE: return owt_base_Stream_StreamSourceInfo_VideoSourceInfo.RAW_FILE.index + 0;
      case owt_base_Stream_StreamSourceInfo_VideoSourceInfo.ENCODED_FILE: return owt_base_Stream_StreamSourceInfo_VideoSourceInfo.ENCODED_FILE.index + 0;
      case owt_base_Stream_StreamSourceInfo_VideoSourceInfo.MIXED: return owt_base_Stream_StreamSourceInfo_VideoSourceInfo.MIXED.index + 0;
      case owt_base_Stream_StreamSourceInfo_VideoSourceInfo.OTHERS: return owt_base_Stream_StreamSourceInfo_VideoSourceInfo.OTHERS.index + 0;
    }
  }
}

extension owt_base_Stream_StreamSourceInfo_VideoSourceInfoFromX on int {
  owt_base_Stream_StreamSourceInfo_VideoSourceInfo toowt_base_Stream_StreamSourceInfo_VideoSourceInfo() {
    switch (this) {
      
      default: return owt_base_Stream_StreamSourceInfo_VideoSourceInfo.values[this + 0];
    }
  }
}