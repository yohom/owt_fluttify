// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:owt_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class owt_conference_RemoteStream extends java_lang_Object  {
  //region constants
  static const String name__ = 'owt.conference.RemoteStream';

  
  //endregion

  //region creators
  
  //endregion

  //region getters
  Future<owt_conference_SubscriptionCapabilities> get_extraSubscriptionCapability() async {
    final __result__ = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod("owt.conference.RemoteStream::get_extraSubscriptionCapability", {'refId': refId});
    kNativeObjectPool.add(owt_conference_SubscriptionCapabilities()..refId = __result__..tag__ = 'owt_fluttify');
    return owt_conference_SubscriptionCapabilities()..refId = __result__..tag__ = 'owt_fluttify';
  }
  
  Future<owt_conference_PublicationSettings> get_publicationSettings() async {
    final __result__ = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod("owt.conference.RemoteStream::get_publicationSettings", {'refId': refId});
    kNativeObjectPool.add(owt_conference_PublicationSettings()..refId = __result__..tag__ = 'owt_fluttify');
    return owt_conference_PublicationSettings()..refId = __result__..tag__ = 'owt_fluttify';
  }
  
  //endregion

  //region setters
  Future<void> set_extraSubscriptionCapability(owt_conference_SubscriptionCapabilities extraSubscriptionCapability) async {
    await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('owt.conference.RemoteStream::set_extraSubscriptionCapability', {'refId': refId, "extraSubscriptionCapability": extraSubscriptionCapability.refId});
  
  
  }
  
  Future<void> set_publicationSettings(owt_conference_PublicationSettings publicationSettings) async {
    await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('owt.conference.RemoteStream::set_publicationSettings', {'refId': refId, "publicationSettings": publicationSettings.refId});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}

extension owt_conference_RemoteStream_Batch on List<owt_conference_RemoteStream> {
  //region getters
  Future<List<owt_conference_SubscriptionCapabilities>> get_extraSubscriptionCapability_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod("owt.conference.RemoteStream::get_extraSubscriptionCapability_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => owt_conference_SubscriptionCapabilities()..refId = __result__..tag__ = 'owt_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  Future<List<owt_conference_PublicationSettings>> get_publicationSettings_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/owt_fluttify').invokeMethod("owt.conference.RemoteStream::get_publicationSettings_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => owt_conference_PublicationSettings()..refId = __result__..tag__ = 'owt_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_extraSubscriptionCapability_batch(List<owt_conference_SubscriptionCapabilities> extraSubscriptionCapability) async {
    await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('owt.conference.RemoteStream::set_extraSubscriptionCapability_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "extraSubscriptionCapability": extraSubscriptionCapability[__i__].refId}]);
  
  
  }
  
  Future<void> set_publicationSettings_batch(List<owt_conference_PublicationSettings> publicationSettings) async {
    await MethodChannel('com.fluttify/owt_fluttify').invokeMethod('owt.conference.RemoteStream::set_publicationSettings_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "publicationSettings": publicationSettings[__i__].refId}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}